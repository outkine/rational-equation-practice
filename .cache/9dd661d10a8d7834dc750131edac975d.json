{"dependencies":[{"name":"./index.scss","dynamic":true},{"name":"./index.html","dynamic":true,"entry":true}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Rational Functions</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Vollkorn\" rel=\"stylesheet\">\n  <link href=\"/rational-equation-practice.dbe17d68.css\" rel=\"stylesheet\">\n</head>\n<body>\n  <div class=\"header\">\n    <div class=\"table-of-contents\">\n      <p onclick=\"selectProblem(0)\">0</p>\n      <p onclick=\"selectProblem(1)\">1</p>\n      <p onclick=\"selectProblem(2)\">2</p>\n      <p onclick=\"selectProblem(3)\">3</p>\n      <p onclick=\"selectProblem(4)\">4</p>\n      <p onclick=\"selectProblem(5)\">5</p>\n      <p onclick=\"selectProblem(6)\">6</p>\n      <p onclick=\"selectProblem(7)\">7</p>\n    </div>\n    <div>\n      <a href=\"/index.html\">home</a>\n    </div>\n  </div>\n  <div id=\"calculator\" style=\"width: 600px; height: 400px;\"></div>\n  <input id=\"input\">\n  <button id=\"submit\" onclick=\"submit()\">submit</button>\n  <p id=\"result\"></p>\n\n  <script src=\"https://www.desmos.com/api/v1.0/calculator.js?apiKey=dcb31709b452b1cf9dc26972add0fda6\"></script>\n  <script>\n    const calcEl = document.getElementById('calculator')\n    const inputEl = document.getElementById('input')\n    const resultEl = document.getElementById('result')\n    const tocEl = document.querySelector('.table-of-contents')\n\n    let calc = Desmos.GraphingCalculator(calcEl, { expressions: false, border: false })\n\n    const problems = [\n      {\n        formula: 'x^2',\n        type: 'graph',\n        points: [\n          {\n            type: 'xIntercept',\n            y: 0,\n            answer: 3,\n          },\n        ],\n      },\n      {\n        formula: 'x^2',\n        type: 'guess',\n      },\n    ]\n\n    const COLORS = {\n      'xIntercept': 'red',\n      'yIntercept': 'yellow',\n      'horizontal-asymptote': 'green',\n      'vertical-asymptote': 'blue',\n    }\n\n    let currentProblem \n\n    function selectProblem(i) {\n      currentProblem = problems[i]\n      Array.from(tocEl.children).forEach((el) => el.className = '')\n      tocEl.children[i].className = 'active'\n\n      if (problems[i].type === 'guess') {\n        // calc = Desmos.GraphingCalculator(calcEl, { expressions: false })\n        calc.setExpression({ latex: problems[i].formula })\n        inputEl.style.display = 'initial'\n      } else {\n        // calc = Desmos.GraphingCalculator(calcEl, { expressions: false })\n        for (let point of problems[i].points) {\n          let dragMode\n          if (point.x !== undefined) {\n            dragMode = Desmos.DragModes.Y\n          } else {\n            dragMode = Desmos.DragModes.X\n          }\n          calc.setExpression({ latex: '(0, 0)', dragMode, color: COLORS[point.type] })\n        }\n        inputEl.style.display = 'none'\n      }\n    }\n\n    function submit() {\n      let success \n      if (currentProblem.type === 'guess') {\n        if (input.value === currentProblem.formula) success = true\n      } else {\n        success = true \n        for (let i = 0; i < currentProblem.points.length; i++) {\n          const rawPoint = calc.getExpressions()[i].latex\n          let guessPoint\n          if (rawPoint === '(0, 0)') guessPoint = [0, 0]\n          else guessPoint = rawPoint.match(/\\d+\\.?\\d*/g).map(i => parseFloat(i))\n          const point = currentProblem.points[i]\n          if (point.y !== undefined) {\n            if (!withinRange(point.answer, guessPoint[0])) success = false\n          } else {\n            if (!withinRAnge(point.answer, guessPoint[1])) success = false\n          } \n        }\n      }\n      if (success) resultEl.innerHTML = 'success!'\n      else resultEl.innerHTML = 'mistake!'\n    }\n\n    function withinRange(target, guess) {\n      console.log(target, guess)\n      return (target >= guess - .5) && (target <= guess + .5)\n    }\n\n    selectProblem(0)\n  </script>\n</body>\n</html>\n\n\n"},"hash":"c5b3699b2c78e46b0ebe5bc8810c32cd","cacheData":{}}